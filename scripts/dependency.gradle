def version = [
        buildTools      : '3.4.1',
        jacoco          : '0.8.4',
        kotlin          : '1.3.31',
        ktLint          : '0.30.0',
        spotless        : '3.18.0',

        /* CONFIG */
        appBuildTools   : '29.0.0-rc3',
        minSdk          : 21,
        compileSdk      : 'android-Q',
        targetSdk        : 29,

        versionCode      : 1,

        MAJOR            : 1,
        MINOR            : 0,
        PATCH            : 0,
        SUFFIX           : '-beta',

        // Place holder
        versionName      : 'x.y.z',

        /* APP */
        annotation       : '1.1.0-rc01',
        appcompat        : '1.1.0-alpha05',
        chuck            : '1.1.0',
        constraintlayout : '1.1.3',
        glide            : '4.9.0',
        gson             : '2.8.5',
        ktx              : '1.0.2',
        lifecycle        : '2.0.0',
        material         : '1.0.0-rc01',
        navigation       : '2.0.0',
        nullDefense      : '2.0.0',
        okHttp           : '4.0.0-alpha01',
        retrofit         : '2.5.0',
        rxAndroid        : '2.1.1',
        rxJava           : '2.2.8',

        /* UNIT TEST */
        jUnit4           : '4.12',
        mockito          : '2.27.0',
        openpojo         : '0.8.12',

        /* ANDROID TEST */
        androidTestRunner: '1.1.1',
        coreTest         : '1.2.0-beta01',
        jUnitExt         : '1.1.0',
        espresso         : '3.1.1',
        fragmentTesting  : '1.1.0-alpha07',
]

// Semantic versioning
version.versionName = "${version.MAJOR}.${version.MINOR}.${version.PATCH}${version.SUFFIX}"

/**
 * Build
 */
def build = [
        config: [
                buildTools               : version.appBuildTools,
                minSdk                   : version.minSdk,
                compileSdk               : version.compileSdk,
                targetSdk                : version.targetSdk,
                versionCode              : version.versionCode,
                versionName              : version.versionName,

                applicationId            : 'com.venomvendor.idagio',
                testInstrumentationRunner: 'androidx.test.runner.AndroidJUnitRunner',
        ],

        plugin: [
                android           : "com.android.tools.build:gradle:${version.buildTools}",
                kotlin            : "org.jetbrains.kotlin:kotlin-gradle-plugin:${version.kotlin}",
                navigationSafeArgs: "androidx.navigation:navigation-safe-args-gradle-plugin:${version.navigation}",
                spotless          : "com.diffplug.spotless:spotless-plugin-gradle:${version.spotless}",
        ]
]

/**
 * App Dependencies
 */
def app = [
        /*
         * Annotation Processor
         */
        kapt   : [
                // Image Renderer
                glide    : "com.github.bumptech.glide:compiler:${version.glide}",

                // Lifecycle Components
                lifecycle: "androidx.lifecycle:lifecycle-compiler:${version.lifecycle}",
        ],

        /*
         * Main Dependencies
         */
        main   : [
                // Kotlin
                kotlin       : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${version.kotlin}",
                kotlinReflect: "org.jetbrains.kotlin:kotlin-reflect:${version.kotlin}",

                // Reactive
                rxAndroid    : "io.reactivex.rxjava2:rxandroid:${version.rxAndroid}",
                rxJava       : "io.reactivex.rxjava2:rxjava:${version.rxJava}",

                // Image Renderer
                glide        : "com.github.bumptech.glide:glide:${version.glide}",

                // Json Parser
                gson         : "com.google.code.gson:gson:${version.gson}",
                nullDefense  : "com.venomvendor:gson-nulldefense:${version.nullDefense}",

                // Network Client
                retrofit     : "com.squareup.retrofit2:retrofit:${version.retrofit}",
                retrofitGson : "com.squareup.retrofit2:converter-gson:${version.retrofit}",
                retrofitRx   : "com.squareup.retrofit2:adapter-rxjava2:${version.retrofit}",

                // Http Client
                okHttp       : "com.squareup.okhttp3:okhttp:${version.okHttp}",
        ],

        /*
         * Jetpack
         */
        jetpack: [
                annotation        : "androidx.annotation:annotation:${version.annotation}",
                appcompat         : "androidx.appcompat:appcompat:${version.appcompat}",
                constraintlayout  : "androidx.constraintlayout:constraintlayout:${version.constraintlayout}",
                ktx               : "androidx.core:core-ktx:${version.ktx}",
                material          : "com.google.android.material:material:${version.material}",
                navigationFragment: "androidx.navigation:navigation-fragment-ktx:${version.navigation}",
                navigationUi      : "androidx.navigation:navigation-ui-ktx:${version.navigation}",
                viewmodel         : "androidx.lifecycle:lifecycle-viewmodel-ktx:${version.lifecycle}",
        ],

        /*
         * Debug
         */
        debug  : [
                chuck: "com.readystatesoftware.chuck:library:${version.chuck}"
        ],
]

def test = [
        /* jUnit Test */
        junit  : [
                jUnit4  : "junit:junit:${version.jUnit4}",
                mockito : "org.mockito:mockito-core:${version.mockito}",
                openpojo: "com.openpojo:openpojo:${version.openpojo}",
        ],

        /* Android Test */
        android: [
                coreTest       : "androidx.test:core:${version.coreTest}",
                espresso       : "androidx.test.espresso:espresso-core:${version.espresso}",
                espressoContrib: "androidx.test.espresso:espresso-contrib:${version.espresso}",
                fragmentTesting: "androidx.fragment:fragment-testing:${version.fragmentTesting}",
                jUnitExt       : "androidx.test.ext:junit:${version.jUnitExt}",
                runner         : "androidx.test:runner:${version.androidTestRunner}",
        ]
]

def static addRepos(def handler) {
    handler.google()
    handler.jcenter()
}

ext.deps = [
        version    : version,
        buildPlugin: build.plugin,
        buildConfig: build.config,

        app        : app.main,
        debug      : app.debug,
        jetpack    : app.jetpack,
        kapt       : app.kapt,

        test       : test.junit,
        androidTest: test.android,
]

ext.addRepos = this.&addRepos
